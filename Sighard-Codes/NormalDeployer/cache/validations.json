{
  "version": "3.2",
  "log": [
    {
      "Context": {
        "src": "contracts\\multisender.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "contracts\\multisender.sol:108",
        "version": {
          "withMetadata": "963d167062593e57eb59b98999e0a8868660801259bc06739c869cc75e3868ee",
          "withoutMetadata": "bf836b097559b8901d45e7c15e2a4d6a96f53805521492895714f5ce0c978132",
          "linkedWithoutMetadata": "bf836b097559b8901d45e7c15e2a4d6a96f53805521492895714f5ce0c978132"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts\\multisender.sol:127"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\multisender.sol:109"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\multisender.sol:111"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\multisender.sol:113"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\multisender.sol:115"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\multisender.sol:116"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\multisender.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\multisender.sol:80",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts\\multisender.sol:573",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts\\multisender.sol:439",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts\\multisender.sol:533",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sdfgdfgs": {
        "src": "contracts\\multisender.sol:605",
        "version": {
          "withMetadata": "bc974acd65c83bd0b733315b1bab1a702061d62456e068d0b281447cbe3505f5",
          "withoutMetadata": "c9af5d81ac42ce69a4c17eaa40e068c6ca1272afdcebfd3667f0aa883d501ae4",
          "linkedWithoutMetadata": "c9af5d81ac42ce69a4c17eaa40e068c6ca1272afdcebfd3667f0aa883d501ae4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "mint(address[],uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "Token",
            "src": "contracts\\multisender.sol:610"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "Token",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)76",
              "contract": "sdfgdfgs",
              "src": "contracts\\multisender.sol:610"
            }
          ],
          "types": {
            "t_contract(IERC20)76": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ClaimContract": {
        "src": "contracts\\Test.sol:155",
        "version": {
          "withMetadata": "b38b727a17def8b2c4485604070fd159499fc2e1ec83777364552fe054aaa89a",
          "withoutMetadata": "78e5bee2cd16000ada5dc70646e741ac61365d1890cb152eddee2a649881a663",
          "linkedWithoutMetadata": "78e5bee2cd16000ada5dc70646e741ac61365d1890cb152eddee2a649881a663"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "claimStuckTokens(address)",
          "setBalances(address[],uint256[])",
          "setDirectBalances(address[],uint256[])",
          "setClaimStatus(bool)",
          "claim()",
          "getBalance(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ClaimContract",
            "src": "contracts\\Test.sol:161"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Test.sol:91"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ClaimContract",
              "src": "contracts\\Test.sol:157"
            },
            {
              "label": "climableToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)76",
              "contract": "ClaimContract",
              "src": "contracts\\Test.sol:158"
            },
            {
              "label": "pauseClaim",
              "offset": 20,
              "slot": "2",
              "type": "t_bool",
              "contract": "ClaimContract",
              "src": "contracts\\Test.sol:159"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)76": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\Test.sol:80",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\Test.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\Test.sol:90",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\Test.sol:98"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Test.sol:91"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ClaimContract": {
        "src": "contracts\\Test.sol:205",
        "version": {
          "withMetadata": "207bf58b7a473f77e248dd5aa812696716144c5de5d01ed3391093f7e2feec60",
          "withoutMetadata": "99daa391cd6bf28e833b0b9afbd33cae5061a3d99b3c1c6e0e4447dce048123f",
          "linkedWithoutMetadata": "99daa391cd6bf28e833b0b9afbd33cae5061a3d99b3c1c6e0e4447dce048123f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "claimStuckTokens(address)",
          "setBalances(address[],uint256[])",
          "setDirectBalances(address[],uint256[])",
          "claim()",
          "getBalance(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ClaimContract",
            "src": "contracts\\Test.sol:208"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Test.sol:92"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ClaimContract",
              "src": "contracts\\Test.sol:206"
            },
            {
              "label": "climableToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)76",
              "contract": "ClaimContract",
              "src": "contracts\\Test.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)76": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\Test.sol:81",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\Test.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\Test.sol:91",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\Test.sol:99"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Test.sol:92"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\Test.sol:156",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts\\Test.sol:173"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\Test.sol:171"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ClaimContract": {
        "src": "contracts\\Test.sol:205",
        "version": {
          "withMetadata": "f8f8e992d18c5de13a5ce7818ab0ff3ecd0eb0ddddce182302c6f840e4959e91",
          "withoutMetadata": "3e1c144ba2f57821ffa9155c11f9febb79990607cdf5434b2e41fdaeab887d08",
          "linkedWithoutMetadata": "3e1c144ba2f57821ffa9155c11f9febb79990607cdf5434b2e41fdaeab887d08"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "claimStuckTokens(address)",
          "setBalances(address[],uint256[])",
          "claim()",
          "getBalance(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ClaimContract",
            "src": "contracts\\Test.sol:208"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Test.sol:92"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ClaimContract",
              "src": "contracts\\Test.sol:206"
            },
            {
              "label": "climableToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)76",
              "contract": "ClaimContract",
              "src": "contracts\\Test.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)76": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\Test.sol:81",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\Test.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\Test.sol:91",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\Test.sol:99"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Test.sol:92"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\Test.sol:156",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts\\Test.sol:173"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\Test.sol:171"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ClaimContract": {
        "src": "contracts\\Test.sol:205",
        "version": {
          "withMetadata": "12125686fe00a94cb7e1e23a7292ba28637d93edce79b4e8f58001954a799b24",
          "withoutMetadata": "adc2550354aa675ddd06fde3a91efa037d5f94f97ada7f12972fc63275daf19c",
          "linkedWithoutMetadata": "adc2550354aa675ddd06fde3a91efa037d5f94f97ada7f12972fc63275daf19c"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "claimStuckTokens(address)",
          "setBalances(address[],uint256[])",
          "claim()",
          "getBalance(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ClaimContract",
            "src": "contracts\\Test.sol:208"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Test.sol:92"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ClaimContract",
              "src": "contracts\\Test.sol:206"
            },
            {
              "label": "climableToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)76",
              "contract": "ClaimContract",
              "src": "contracts\\Test.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)76": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\Test.sol:81",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\Test.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\Test.sol:91",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\Test.sol:99"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Test.sol:92"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\Test.sol:156",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts\\Test.sol:173"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\Test.sol:171"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ClaimContract": {
        "src": "contracts\\Test.sol:205",
        "version": {
          "withMetadata": "183dfea40610e3697c98781b666fdca72ce4f33613907622afdfacfb8cb29bf0",
          "withoutMetadata": "16d5e99080ded7e8d4e776b2547bb5578fc0590b74b74b8d2979203372cc4a6b",
          "linkedWithoutMetadata": "16d5e99080ded7e8d4e776b2547bb5578fc0590b74b74b8d2979203372cc4a6b"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "claimStuckTokens(address)",
          "setBalances(address[],uint256[])",
          "claim()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ClaimContract",
            "src": "contracts\\Test.sol:208"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Test.sol:92"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ClaimContract",
              "src": "contracts\\Test.sol:206"
            },
            {
              "label": "climableToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)76",
              "contract": "ClaimContract",
              "src": "contracts\\Test.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)76": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\busd.sol:105",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\busd.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\Test.sol:91",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\Test.sol:99"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Test.sol:92"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\Test.sol:156",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts\\Test.sol:173"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\Test.sol:171"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "contracts\\busd.sol:116",
        "version": {
          "withMetadata": "53dda4d39b7bf9c1c417a9fe921a0abb9d855035c7eca2db141be1105ca9c627",
          "withoutMetadata": "bf836b097559b8901d45e7c15e2a4d6a96f53805521492895714f5ce0c978132",
          "linkedWithoutMetadata": "bf836b097559b8901d45e7c15e2a4d6a96f53805521492895714f5ce0c978132"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts\\busd.sol:135"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:117"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:119"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:121"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:123"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:124"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\busd.sol:88",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Token": {
        "src": "contracts\\busd.sol:448",
        "version": {
          "withMetadata": "4f2b3af7b875b7ce8dfdece42f779e1fc2d6660976b3a3e28c835ce99b85be3f",
          "withoutMetadata": "0415f14c8f9e4096c1328b242edafa56857325c812421a9ccdd9a85a1c3cc9f7",
          "linkedWithoutMetadata": "0415f14c8f9e4096c1328b242edafa56857325c812421a9ccdd9a85a1c3cc9f7"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address[])",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts\\busd.sol:449"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:117"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:119"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:121"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:123"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:124"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts\\Test.sol:5",
        "version": {
          "withMetadata": "b232bf9747be998ff8c2fd87a37a0154384312eedd18b048b14e990f3f6d87e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\Test.sol:210",
        "version": {
          "withMetadata": "ad73b0eff5bc07b55cce8455d80b69b774e63947236c7283c7300a57c0b04b52",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DripMaxiLottery": {
        "src": "contracts\\Test.sol:416",
        "version": {
          "withMetadata": "21232576ee9303bd86f1ee8a5be0b690b589a5a9b25b5cd8258ea0c8d00c0d93",
          "withoutMetadata": "8ae16df80af47fef48ca0f1685e231d69a8695199222084bce895beb0edeab8f",
          "linkedWithoutMetadata": "8ae16df80af47fef48ca0f1685e231d69a8695199222084bce895beb0edeab8f"
        },
        "inherit": [
          "VRFConsumerBaseV2",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeBEP20",
          "Address"
        ],
        "methods": [
          "()",
          "startTime()",
          "setReferee(uint8,address)",
          "setOperator(address)",
          "setSwapTokenAmount(uint256)",
          "pickWinner()",
          "buyTicket(uint256[],uint8)",
          "random()",
          "()",
          "claimStuckTokens(address)",
          "changeMarketingWallet(address)",
          "changeDripMaxiToken(address)",
          "changeTicketPrice(uint256)",
          "changedSwapSetting(bool,uint256)",
          "setFees(uint8,uint8,uint8)",
          "changeIntervalMultiplier(uint256[2])",
          "changeRewardToken(address)",
          "updateUniswapV2Router(address)",
          "getTicketOwner(uint256,uint256)",
          "isValidTicket(uint256)",
          "getTickets(uint256,address)",
          "getTicketsToday(address)",
          "getsoldTicket()",
          "getNextDrawTime()",
          "withdrawableAmount(address)",
          "claimOwner(address)",
          "deposit(uint256)",
          "claim()",
          "getNextDraw()",
          "getDrawDate(uint256)",
          "finishedRounds(uint256)",
          "checkYourTickets(address,uint256)",
          "getMatchFirstThree(uint256)",
          "getWinnerTickets(uint256)",
          "getWinner(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DripMaxiLottery",
            "src": "contracts\\Test.sol:484"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts\\Test.sol:422"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts\\Test.sol:423"
          },
          {
            "kind": "state-variable-assignment",
            "name": "s_subscriptionId",
            "src": "contracts\\Test.sol:425"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts\\Test.sol:426"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts\\Test.sol:427"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts\\Test.sol:428"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\Test.sol:446"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Test.sol:224"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\Test.sol:264"
            },
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(VRFCoordinatorV2Interface)562",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:421"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:422"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:423"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint64",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:425"
            },
            {
              "label": "numWords",
              "offset": 8,
              "slot": "5",
              "type": "t_uint32",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:426"
            },
            {
              "label": "callbackGasLimit",
              "offset": 12,
              "slot": "5",
              "type": "t_uint32",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:427"
            },
            {
              "label": "requestConfirmations",
              "offset": 16,
              "slot": "5",
              "type": "t_uint16",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:428"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:429"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:430"
            },
            {
              "label": "RewardToken",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(IBEP20)477",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:432"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IUniswapV2Router02)1180",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:433"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:435"
            },
            {
              "label": "swapTokensAtAmount",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:436"
            },
            {
              "label": "accumulatedFees",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:437"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:438"
            },
            {
              "label": "totalFee",
              "offset": 1,
              "slot": "12",
              "type": "t_uint8",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:440"
            },
            {
              "label": "refereeFee",
              "offset": 2,
              "slot": "12",
              "type": "t_uint8",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:441"
            },
            {
              "label": "burnFee",
              "offset": 3,
              "slot": "12",
              "type": "t_uint8",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:442"
            },
            {
              "label": "marketingFee",
              "offset": 4,
              "slot": "12",
              "type": "t_uint8",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:443"
            },
            {
              "label": "marketingWallet",
              "offset": 5,
              "slot": "12",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:445"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:446"
            },
            {
              "label": "dripMaxiToken",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:447"
            },
            {
              "label": "startEpoch",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:448"
            },
            {
              "label": "currentLotteryNumber",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:449"
            },
            {
              "label": "ticketPrice",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:451"
            },
            {
              "label": "swapTokenAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:452"
            },
            {
              "label": "multiplier",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_uint256)2_storage",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:453"
            },
            {
              "label": "refereeAddress",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint8,t_address)",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:454"
            },
            {
              "label": "perEpoch",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:455"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:456"
            },
            {
              "label": "totalRewards",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:457"
            },
            {
              "label": "n_lottery",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_struct(Lottery)1304_storage)",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:469"
            },
            {
              "label": "operator",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:509"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IBEP20)477": {
              "label": "contract IBEP20",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)1180": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)562": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Lottery)1304_storage)": {
              "label": "mapping(uint256 => struct DripMaxiLottery.Lottery)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_address)": {
              "label": "mapping(uint8 => address)",
              "numberOfBytes": "32"
            },
            "t_struct(Lottery)1304_storage": {
              "label": "struct DripMaxiLottery.Lottery",
              "members": [
                {
                  "label": "lotteryWinner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winnerTicket",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_otherWinners",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "soldTicket",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "soldTickets",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isEnded",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "ticketOwner",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "holderTicket",
                  "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pairedThreeDigitTicketOwner",
                  "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBEP20": {
        "src": "contracts\\Test.sol:133",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "decimals()",
          "symbol()",
          "name()",
          "getOwner()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts\\Test.sol:281",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts\\Test.sol:375",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\Test.sol:223",
        "version": {
          "withMetadata": "fa1f0fe6e85c7b4fd0fe47e060bf972fc17bd9b372756adcd42259bea78a48e6",
          "withoutMetadata": "93b07c0c18ed7657d1c6840065e4b9d0b634d5a62c2e864fe15e4a3c57dc2681",
          "linkedWithoutMetadata": "93b07c0c18ed7657d1c6840065e4b9d0b634d5a62c2e864fe15e4a3c57dc2681"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\Test.sol:228"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Test.sol:224"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\Test.sol:259",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts\\Test.sol:266"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\Test.sol:264"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeBEP20": {
        "src": "contracts\\Test.sol:75",
        "version": {
          "withMetadata": "fb92c8c431634844fc11742e87126d07c4afc112e8eb851b723f1096e3b850ed",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFConsumerBaseV2": {
        "src": "contracts\\Test.sol:194",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "contracts\\Test.sol:197"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "contracts\\Test.sol:196"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "contracts\\Test.sol:154",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)",
          "pendingRequestExists(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts\\Test.sol:5",
        "version": {
          "withMetadata": "afa38c0d255519cfd05cf0beb8c7c305b047586461f12030640b849a93969f33",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\Test.sol:210",
        "version": {
          "withMetadata": "80923b9357d540a9147be5cbd062022055ea4ad9d633682e16c2b4e38e364995",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DripMaxiLottery": {
        "src": "contracts\\Test.sol:416",
        "version": {
          "withMetadata": "f3e69edaab20af9ec202e98b8e6df79ee976940e676fc64e98fce8505034a681",
          "withoutMetadata": "c8e6078490f91a4e4e41a9d3dd786241fb6d6e63b928ced550a1c60ec7642af7",
          "linkedWithoutMetadata": "c8e6078490f91a4e4e41a9d3dd786241fb6d6e63b928ced550a1c60ec7642af7"
        },
        "inherit": [
          "VRFConsumerBaseV2",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeBEP20",
          "Address"
        ],
        "methods": [
          "()",
          "startTime()",
          "setReferee(uint8,address)",
          "setOperator(address)",
          "setSwapTokenAmount(uint256)",
          "pickWinner()",
          "buyTicket(uint256[],uint8)",
          "random()",
          "()",
          "claimStuckTokens(address)",
          "changeMarketingWallet(address)",
          "changeDripMaxiToken(address)",
          "changeTicketPrice(uint256)",
          "changedSwapSetting(bool,uint256)",
          "setFees(uint8,uint8,uint8)",
          "changeIntervalMultiplier(uint256[2])",
          "changeRewardToken(address)",
          "updateUniswapV2Router(address)",
          "getTicketOwner(uint256,uint256)",
          "isValidTicket(uint256)",
          "getTickets(uint256,address)",
          "getTicketsToday(address)",
          "getsoldTicket()",
          "getNextDrawTime()",
          "withdrawableAmount(address)",
          "claimOwner(address)",
          "claim()",
          "getNextDraw()",
          "getDrawDate(uint256)",
          "finishedRounds(uint256)",
          "checkYourTickets(address,uint256)",
          "getMatchFirstThree(uint256)",
          "getWinnerTickets(uint256)",
          "getWinner(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DripMaxiLottery",
            "src": "contracts\\Test.sol:484"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts\\Test.sol:422"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts\\Test.sol:423"
          },
          {
            "kind": "state-variable-assignment",
            "name": "s_subscriptionId",
            "src": "contracts\\Test.sol:425"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts\\Test.sol:426"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts\\Test.sol:427"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts\\Test.sol:428"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\Test.sol:446"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Test.sol:224"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\Test.sol:264"
            },
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(VRFCoordinatorV2Interface)562",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:421"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:422"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:423"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint64",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:425"
            },
            {
              "label": "numWords",
              "offset": 8,
              "slot": "5",
              "type": "t_uint32",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:426"
            },
            {
              "label": "callbackGasLimit",
              "offset": 12,
              "slot": "5",
              "type": "t_uint32",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:427"
            },
            {
              "label": "requestConfirmations",
              "offset": 16,
              "slot": "5",
              "type": "t_uint16",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:428"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:429"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:430"
            },
            {
              "label": "RewardToken",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(IBEP20)477",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:432"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IUniswapV2Router02)1180",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:433"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:435"
            },
            {
              "label": "swapTokensAtAmount",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:436"
            },
            {
              "label": "accumulatedFees",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:437"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:438"
            },
            {
              "label": "totalFee",
              "offset": 1,
              "slot": "12",
              "type": "t_uint8",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:440"
            },
            {
              "label": "refereeFee",
              "offset": 2,
              "slot": "12",
              "type": "t_uint8",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:441"
            },
            {
              "label": "burnFee",
              "offset": 3,
              "slot": "12",
              "type": "t_uint8",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:442"
            },
            {
              "label": "marketingFee",
              "offset": 4,
              "slot": "12",
              "type": "t_uint8",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:443"
            },
            {
              "label": "marketingWallet",
              "offset": 5,
              "slot": "12",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:445"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:446"
            },
            {
              "label": "dripMaxiToken",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:447"
            },
            {
              "label": "startEpoch",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:448"
            },
            {
              "label": "currentLotteryNumber",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:449"
            },
            {
              "label": "ticketPrice",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:451"
            },
            {
              "label": "swapTokenAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:452"
            },
            {
              "label": "multiplier",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_uint256)2_storage",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:453"
            },
            {
              "label": "refereeAddress",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint8,t_address)",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:454"
            },
            {
              "label": "perEpoch",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:455"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:456"
            },
            {
              "label": "totalRewards",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:457"
            },
            {
              "label": "n_lottery",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_struct(Lottery)1304_storage)",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:469"
            },
            {
              "label": "operator",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:509"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IBEP20)477": {
              "label": "contract IBEP20",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)1180": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)562": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Lottery)1304_storage)": {
              "label": "mapping(uint256 => struct DripMaxiLottery.Lottery)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_address)": {
              "label": "mapping(uint8 => address)",
              "numberOfBytes": "32"
            },
            "t_struct(Lottery)1304_storage": {
              "label": "struct DripMaxiLottery.Lottery",
              "members": [
                {
                  "label": "lotteryWinner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winnerTicket",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_otherWinners",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "soldTicket",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "soldTickets",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isEnded",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "ticketOwner",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "holderTicket",
                  "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pairedThreeDigitTicketOwner",
                  "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBEP20": {
        "src": "contracts\\Test.sol:133",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "decimals()",
          "symbol()",
          "name()",
          "getOwner()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts\\Test.sol:281",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts\\Test.sol:375",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\Test.sol:223",
        "version": {
          "withMetadata": "de798c89bd55fd70f64a1583ba4612ab241beace4172b16f6b71cac917be2a82",
          "withoutMetadata": "93b07c0c18ed7657d1c6840065e4b9d0b634d5a62c2e864fe15e4a3c57dc2681",
          "linkedWithoutMetadata": "93b07c0c18ed7657d1c6840065e4b9d0b634d5a62c2e864fe15e4a3c57dc2681"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\Test.sol:228"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Test.sol:224"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\Test.sol:259",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts\\Test.sol:266"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\Test.sol:264"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeBEP20": {
        "src": "contracts\\Test.sol:75",
        "version": {
          "withMetadata": "ad20cd4209c9bc00eb09a7850e61d94347913317ea8e70b4fda2281f0aff49ba",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFConsumerBaseV2": {
        "src": "contracts\\Test.sol:194",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "contracts\\Test.sol:197"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "contracts\\Test.sol:196"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "contracts\\Test.sol:154",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)",
          "pendingRequestExists(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts\\Test.sol:5",
        "version": {
          "withMetadata": "fdc64ab552da8a43071ec624bdb6eec5adabad22ee6b7fcdaae5b4eed2d78d84",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\Test.sol:210",
        "version": {
          "withMetadata": "0be9be7cfae8d3782aaf58330c5e5b3e4332276a1072bd670aee28dc62c41c05",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DripMaxiLottery": {
        "src": "contracts\\Test.sol:416",
        "version": {
          "withMetadata": "4c3ebb382ad508df2b1dec54c4d213f8c62364814cdcf394270ae47d9814fc3f",
          "withoutMetadata": "0caddc96c8f4e48c46ca39d5dc805e8079b7dc9ea66190f36e853bb2f22dfbc5",
          "linkedWithoutMetadata": "0caddc96c8f4e48c46ca39d5dc805e8079b7dc9ea66190f36e853bb2f22dfbc5"
        },
        "inherit": [
          "VRFConsumerBaseV2",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeBEP20",
          "Address"
        ],
        "methods": [
          "()",
          "startTime()",
          "setReferee(uint8,address)",
          "setOperator(address)",
          "setSwapTokenAmount(uint256)",
          "pickWinner()",
          "buyTicket(uint256[],uint8)",
          "random()",
          "()",
          "claimStuckTokens(address)",
          "changeMarketingWallet(address)",
          "changeDripMaxiToken(address)",
          "changeTicketPrice(uint256)",
          "changedSwapSetting(bool,uint256)",
          "setFees(uint8,uint8,uint8)",
          "changeIntervalMultiplier(uint256[2])",
          "changeRewardToken(address)",
          "updateUniswapV2Router(address)",
          "getTicketOwner(uint256,uint256)",
          "isValidTicket(uint256)",
          "getTickets(uint256,address)",
          "getTicketsToday(address)",
          "getsoldTicket()",
          "getNextDrawTime()",
          "withdrawableAmount(address)",
          "claimOwner(address)",
          "claim()",
          "getNextDraw()",
          "getDrawDate(uint256)",
          "finishedRounds(uint256)",
          "checkYourTickets(address,uint256)",
          "getMatchFirstThree(uint256)",
          "getWinnerTickets(uint256)",
          "getWinner(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DripMaxiLottery",
            "src": "contracts\\Test.sol:485"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts\\Test.sol:422"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts\\Test.sol:423"
          },
          {
            "kind": "state-variable-assignment",
            "name": "s_subscriptionId",
            "src": "contracts\\Test.sol:425"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts\\Test.sol:426"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts\\Test.sol:427"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts\\Test.sol:428"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\Test.sol:446"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Test.sol:224"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\Test.sol:264"
            },
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(VRFCoordinatorV2Interface)562",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:421"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:422"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:423"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint64",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:425"
            },
            {
              "label": "numWords",
              "offset": 8,
              "slot": "5",
              "type": "t_uint32",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:426"
            },
            {
              "label": "callbackGasLimit",
              "offset": 12,
              "slot": "5",
              "type": "t_uint32",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:427"
            },
            {
              "label": "requestConfirmations",
              "offset": 16,
              "slot": "5",
              "type": "t_uint16",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:428"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:429"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:430"
            },
            {
              "label": "RewardToken",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(IBEP20)477",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:432"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IUniswapV2Router02)1180",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:433"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:435"
            },
            {
              "label": "swapTokensAtAmount",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:436"
            },
            {
              "label": "accumulatedFees",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:437"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:438"
            },
            {
              "label": "totalFee",
              "offset": 1,
              "slot": "12",
              "type": "t_uint8",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:440"
            },
            {
              "label": "refereeFee",
              "offset": 2,
              "slot": "12",
              "type": "t_uint8",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:441"
            },
            {
              "label": "burnFee",
              "offset": 3,
              "slot": "12",
              "type": "t_uint8",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:442"
            },
            {
              "label": "marketingFee",
              "offset": 4,
              "slot": "12",
              "type": "t_uint8",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:443"
            },
            {
              "label": "marketingWallet",
              "offset": 5,
              "slot": "12",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:445"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:446"
            },
            {
              "label": "dripMaxiToken",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:447"
            },
            {
              "label": "startEpoch",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:448"
            },
            {
              "label": "currentLotteryNumber",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:449"
            },
            {
              "label": "ticketPrice",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:451"
            },
            {
              "label": "swapTokenAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:452"
            },
            {
              "label": "multiplier",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_uint256)2_storage",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:453"
            },
            {
              "label": "refereeAddress",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint8,t_address)",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:454"
            },
            {
              "label": "perEpoch",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:455"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:456"
            },
            {
              "label": "totalRewards",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:457"
            },
            {
              "label": "n_lottery",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_struct(Lottery)1304_storage)",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:469"
            },
            {
              "label": "countRandomNumber",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:470"
            },
            {
              "label": "operator",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:510"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IBEP20)477": {
              "label": "contract IBEP20",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)1180": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)562": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Lottery)1304_storage)": {
              "label": "mapping(uint256 => struct DripMaxiLottery.Lottery)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_address)": {
              "label": "mapping(uint8 => address)",
              "numberOfBytes": "32"
            },
            "t_struct(Lottery)1304_storage": {
              "label": "struct DripMaxiLottery.Lottery",
              "members": [
                {
                  "label": "lotteryWinner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winnerTicket",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_otherWinners",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "soldTicket",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "soldTickets",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isEnded",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "ticketOwner",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "holderTicket",
                  "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pairedThreeDigitTicketOwner",
                  "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBEP20": {
        "src": "contracts\\Test.sol:133",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "decimals()",
          "symbol()",
          "name()",
          "getOwner()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts\\Test.sol:281",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts\\Test.sol:375",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\Test.sol:223",
        "version": {
          "withMetadata": "9f9d13efbf5523dd542e0e6fe46b3e4fcc263b96010716d1ddab3c58746050a4",
          "withoutMetadata": "93b07c0c18ed7657d1c6840065e4b9d0b634d5a62c2e864fe15e4a3c57dc2681",
          "linkedWithoutMetadata": "93b07c0c18ed7657d1c6840065e4b9d0b634d5a62c2e864fe15e4a3c57dc2681"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\Test.sol:228"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Test.sol:224"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\Test.sol:259",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts\\Test.sol:266"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\Test.sol:264"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeBEP20": {
        "src": "contracts\\Test.sol:75",
        "version": {
          "withMetadata": "99fb91c939425008e50e3625a603b34cc4377f8aeec5a918bd2987ca8d35376e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFConsumerBaseV2": {
        "src": "contracts\\Test.sol:194",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "contracts\\Test.sol:197"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "contracts\\Test.sol:196"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "contracts\\Test.sol:154",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)",
          "pendingRequestExists(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\busd.sol:105",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "contracts\\busd.sol:116",
        "version": {
          "withMetadata": "53dda4d39b7bf9c1c417a9fe921a0abb9d855035c7eca2db141be1105ca9c627",
          "withoutMetadata": "bf836b097559b8901d45e7c15e2a4d6a96f53805521492895714f5ce0c978132",
          "linkedWithoutMetadata": "bf836b097559b8901d45e7c15e2a4d6a96f53805521492895714f5ce0c978132"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts\\busd.sol:135"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:117"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:119"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:121"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:123"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:124"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\busd.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\busd.sol:88",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Token": {
        "src": "contracts\\busd.sol:448",
        "version": {
          "withMetadata": "4f2b3af7b875b7ce8dfdece42f779e1fc2d6660976b3a3e28c835ce99b85be3f",
          "withoutMetadata": "0415f14c8f9e4096c1328b242edafa56857325c812421a9ccdd9a85a1c3cc9f7",
          "linkedWithoutMetadata": "0415f14c8f9e4096c1328b242edafa56857325c812421a9ccdd9a85a1c3cc9f7"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address[])",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts\\busd.sol:449"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:117"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:119"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:121"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:123"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\busd.sol:124"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Address": {
        "src": "contracts\\Test.sol:5",
        "version": {
          "withMetadata": "9a99faf5dfe9e7ecf859e64da0991438bd7879e18bf9f72619647fafa5ebe8a2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\Test.sol:210",
        "version": {
          "withMetadata": "5bd6a8a639cd8f045c863b5a8904a236fd55e87a32b87a551af93459b69aa0eb",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DripMaxiLottery": {
        "src": "contracts\\Test.sol:416",
        "version": {
          "withMetadata": "00dd5d477ccc45053bdbc7c4f4384c1416e11efafd37acb7a230dce2f5d085ca",
          "withoutMetadata": "45c26349ca9fb5ec8ee1efd80cabcc07c529027b51c0da59c1daa26931b74607",
          "linkedWithoutMetadata": "45c26349ca9fb5ec8ee1efd80cabcc07c529027b51c0da59c1daa26931b74607"
        },
        "inherit": [
          "VRFConsumerBaseV2",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeBEP20",
          "Address"
        ],
        "methods": [
          "()",
          "startTime()",
          "setReferee(uint8,address)",
          "setOperator(address)",
          "setSwapTokenAmount(uint256)",
          "pickWinner()",
          "buyTicket(uint256[],uint8)",
          "random()",
          "()",
          "claimStuckTokens(address)",
          "changeMarketingWallet(address)",
          "changeDripMaxiToken(address)",
          "changeTicketPrice(uint256)",
          "changedSwapSetting(bool,uint256)",
          "setFees(uint8,uint8,uint8)",
          "changeIntervalMultiplier(uint256[2])",
          "changeRewardToken(address)",
          "updateUniswapV2Router(address)",
          "getTicketOwner(uint256,uint256)",
          "isValidTicket(uint256)",
          "getTickets(uint256,address)",
          "getTicketsToday(address)",
          "getsoldTicket()",
          "getNextDrawTime()",
          "withdrawableAmount(address)",
          "claimOwner(address)",
          "claim()",
          "getNextDraw()",
          "getDrawDate(uint256)",
          "finishedRounds(uint256)",
          "checkYourTickets(address,uint256)",
          "getMatchFirstThree(uint256)",
          "getWinnerTickets(uint256)",
          "getWinner(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DripMaxiLottery",
            "src": "contracts\\Test.sol:485"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts\\Test.sol:422"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts\\Test.sol:423"
          },
          {
            "kind": "state-variable-assignment",
            "name": "s_subscriptionId",
            "src": "contracts\\Test.sol:425"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts\\Test.sol:426"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts\\Test.sol:427"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts\\Test.sol:428"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEAD",
            "src": "contracts\\Test.sol:446"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Test.sol:224"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\Test.sol:264"
            },
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(VRFCoordinatorV2Interface)562",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:421"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:422"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:423"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint64",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:425"
            },
            {
              "label": "numWords",
              "offset": 8,
              "slot": "5",
              "type": "t_uint32",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:426"
            },
            {
              "label": "callbackGasLimit",
              "offset": 12,
              "slot": "5",
              "type": "t_uint32",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:427"
            },
            {
              "label": "requestConfirmations",
              "offset": 16,
              "slot": "5",
              "type": "t_uint16",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:428"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:429"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:430"
            },
            {
              "label": "RewardToken",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(IBEP20)477",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:432"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IUniswapV2Router02)1180",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:433"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "9",
              "type": "t_bool",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:435"
            },
            {
              "label": "swapTokensAtAmount",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:436"
            },
            {
              "label": "accumulatedFees",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:437"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:438"
            },
            {
              "label": "totalFee",
              "offset": 1,
              "slot": "12",
              "type": "t_uint8",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:440"
            },
            {
              "label": "refereeFee",
              "offset": 2,
              "slot": "12",
              "type": "t_uint8",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:441"
            },
            {
              "label": "burnFee",
              "offset": 3,
              "slot": "12",
              "type": "t_uint8",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:442"
            },
            {
              "label": "marketingFee",
              "offset": 4,
              "slot": "12",
              "type": "t_uint8",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:443"
            },
            {
              "label": "marketingWallet",
              "offset": 5,
              "slot": "12",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:445"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:446"
            },
            {
              "label": "dripMaxiToken",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:447"
            },
            {
              "label": "startEpoch",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:448"
            },
            {
              "label": "currentLotteryNumber",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:449"
            },
            {
              "label": "ticketPrice",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:451"
            },
            {
              "label": "swapTokenAmount",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:452"
            },
            {
              "label": "multiplier",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_uint256)2_storage",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:453"
            },
            {
              "label": "refereeAddress",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint8,t_address)",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:454"
            },
            {
              "label": "perEpoch",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:455"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:456"
            },
            {
              "label": "totalRewards",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:457"
            },
            {
              "label": "n_lottery",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_struct(Lottery)1304_storage)",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:469"
            },
            {
              "label": "countRandomNumber",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:470"
            },
            {
              "label": "operator",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "DripMaxiLottery",
              "src": "contracts\\Test.sol:510"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IBEP20)477": {
              "label": "contract IBEP20",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)1180": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)562": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Lottery)1304_storage)": {
              "label": "mapping(uint256 => struct DripMaxiLottery.Lottery)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_address)": {
              "label": "mapping(uint8 => address)",
              "numberOfBytes": "32"
            },
            "t_struct(Lottery)1304_storage": {
              "label": "struct DripMaxiLottery.Lottery",
              "members": [
                {
                  "label": "lotteryWinner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winnerTicket",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_otherWinners",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "soldTicket",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "soldTickets",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isEnded",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "ticketOwner",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "holderTicket",
                  "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pairedThreeDigitTicketOwner",
                  "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBEP20": {
        "src": "contracts\\Test.sol:133",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "decimals()",
          "symbol()",
          "name()",
          "getOwner()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts\\Test.sol:281",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts\\Test.sol:375",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\Test.sol:223",
        "version": {
          "withMetadata": "83478e5bf57261c9db8d85c796f07be2f19574abf43fca977a81a0306b63a2cb",
          "withoutMetadata": "93b07c0c18ed7657d1c6840065e4b9d0b634d5a62c2e864fe15e4a3c57dc2681",
          "linkedWithoutMetadata": "93b07c0c18ed7657d1c6840065e4b9d0b634d5a62c2e864fe15e4a3c57dc2681"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\Test.sol:228"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\Test.sol:224"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "contracts\\Test.sol:259",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts\\Test.sol:266"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts\\Test.sol:264"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeBEP20": {
        "src": "contracts\\Test.sol:75",
        "version": {
          "withMetadata": "8f837eb2d6cf3532986a71c27581cfcf744b9353640e8aef9c532814a8341695",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFConsumerBaseV2": {
        "src": "contracts\\Test.sol:194",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "contracts\\Test.sol:197"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "contracts\\Test.sol:196"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "contracts\\Test.sol:154",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)",
          "pendingRequestExists(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AddressUpgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:4",
        "version": {
          "withMetadata": "10e964277ef1319b667d6900e61f95d9a1888a6637aafc3761237a56bddd4bbf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "COOKIE": {
        "src": "contracts\\CookieSaleTokenProxy.sol:1372",
        "version": {
          "withMetadata": "7e09b76b9898402a6396f085e23de47804c253cd369a3ee15e0ceb8976d72920",
          "withoutMetadata": "1ce4847bb713f824abc54757445cfc1c033d1d64b384369b91c38f6c662a899b",
          "linkedWithoutMetadata": "1ce4847bb713f824abc54757445cfc1c033d1d64b384369b91c38f6c662a899b"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "()",
          "claimStuckTokens(address)",
          "updateUniswapV2Router(address)",
          "excludeFromFees(address,bool)",
          "isExcludedFromFees(address)",
          "updateBuyFees(uint256,uint256,uint256,uint256,uint256)",
          "updateSellFees(uint256,uint256,uint256,uint256,uint256)",
          "enableWalletToWalletTransferWithoutFee(bool)",
          "changeMarketingWallet(address)",
          "changeDevelopmentWallet(address)",
          "changeKodiAddress(address)",
          "setSwapEnabled(bool)",
          "setSwapTokensAtAmount(uint256)",
          "setSwapWithLimit(bool)",
          "setEnableMaxWalletLimit(bool)",
          "setMaxWalletAmount(uint256)",
          "setExcludeFromMaxWallet(address,bool)",
          "isExcludedFromMaxWalletLimit(address)",
          "setEnableMaxTransactionLimit(bool)",
          "setMaxTransactionAmounts(uint256,uint256)",
          "setExcludeFromMaxTransactionLimit(address,bool)",
          "isExcludedFromMaxTransaction(address)",
          "updateDividendTracker(address)",
          "updateGasForProcessing(uint256)",
          "updateMinimumBalanceForDividends(uint256)",
          "updateClaimWait(uint256)",
          "getClaimWait()",
          "getTotalDividendsDistributed()",
          "withdrawableDividendOf(address)",
          "dividendTokenBalanceOf(address)",
          "totalRewardsEarned(address)",
          "excludeFromDividends(address)",
          "getAccountDividendsInfo(address)",
          "getAccountDividendsInfoAtIndex(uint256)",
          "processDividendTracker(uint256)",
          "claim()",
          "claimAddress(address)",
          "getLastProcessedIndex()",
          "setLastProcessedIndex(uint256)",
          "getNumberOfDividendTokenHolders()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:234"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:701"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:703"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:705"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:707"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:708"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:1064"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:238"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:278"
            },
            {
              "label": "marketingFeeOnBuy",
              "offset": 0,
              "slot": "151",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1374"
            },
            {
              "label": "marketingFeeOnSell",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1375"
            },
            {
              "label": "developmentFeeOnBuy",
              "offset": 0,
              "slot": "153",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1377"
            },
            {
              "label": "developmentFeeOnSell",
              "offset": 0,
              "slot": "154",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1378"
            },
            {
              "label": "rewardFeeOnBuy",
              "offset": 0,
              "slot": "155",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1380"
            },
            {
              "label": "rewardFeeOnSell",
              "offset": 0,
              "slot": "156",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1381"
            },
            {
              "label": "liquidityFeeOnBuy",
              "offset": 0,
              "slot": "157",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1383"
            },
            {
              "label": "liquidityFeeOnSell",
              "offset": 0,
              "slot": "158",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1384"
            },
            {
              "label": "kodiBuyBackFeeOnBuy",
              "offset": 0,
              "slot": "159",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1386"
            },
            {
              "label": "kodiBuyBackFeeOnSell",
              "offset": 0,
              "slot": "160",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1387"
            },
            {
              "label": "_totalFeesOnBuy",
              "offset": 0,
              "slot": "161",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1389"
            },
            {
              "label": "_totalFeesOnSell",
              "offset": 0,
              "slot": "162",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1390"
            },
            {
              "label": "marketingWallet",
              "offset": 0,
              "slot": "163",
              "type": "t_address",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1392"
            },
            {
              "label": "developmentWallet",
              "offset": 0,
              "slot": "164",
              "type": "t_address",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1393"
            },
            {
              "label": "kodiToken",
              "offset": 0,
              "slot": "165",
              "type": "t_address",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1394"
            },
            {
              "label": "walletToWalletTransferWithoutFee",
              "offset": 20,
              "slot": "165",
              "type": "t_bool",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1396"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "166",
              "type": "t_contract(IUniswapV2Router02)2020",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1398"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "167",
              "type": "t_address",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1399"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "168",
              "type": "t_address",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1401"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "168",
              "type": "t_bool",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1403"
            },
            {
              "label": "swapTokensAtAmount",
              "offset": 0,
              "slot": "169",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1404"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "170",
              "type": "t_bool",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1405"
            },
            {
              "label": "swapWithLimit",
              "offset": 1,
              "slot": "170",
              "type": "t_bool",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1406"
            },
            {
              "label": "_isExcludedFromFees",
              "offset": 0,
              "slot": "171",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1408"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "172",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1409"
            },
            {
              "label": "dividendTracker",
              "offset": 0,
              "slot": "173",
              "type": "t_contract(DividendTracker)3793",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1411"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "174",
              "type": "t_address",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1412"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "175",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1413"
            },
            {
              "label": "_isExcludedFromMaxWalletLimit",
              "offset": 0,
              "slot": "176",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1860"
            },
            {
              "label": "maxWalletLimitEnabled",
              "offset": 0,
              "slot": "177",
              "type": "t_bool",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1861"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "178",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1862"
            },
            {
              "label": "_isExcludedFromMaxTxLimit",
              "offset": 0,
              "slot": "179",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1896"
            },
            {
              "label": "maxTransactionLimitEnabled",
              "offset": 0,
              "slot": "180",
              "type": "t_bool",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1897"
            },
            {
              "label": "maxTransactionAmountBuy",
              "offset": 0,
              "slot": "181",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1898"
            },
            {
              "label": "maxTransactionAmountSell",
              "offset": 0,
              "slot": "182",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1899"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(DividendTracker)3793": {
              "label": "contract DividendTracker",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)2020": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ContextUpgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:220",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:234"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DividendPayingToken": {
        "src": "contracts\\CookieSaleTokenProxy.sol:1087",
        "version": {
          "withMetadata": "983db453edb82acdac2a6236d65c0b062d1ddf0f34a5be1c57f45b1292415e4f",
          "withoutMetadata": "73f345e2f0894a91e7f7d7a181a60cc1665ae0c70c4546f167d92fbd4ac1b2ff",
          "linkedWithoutMetadata": "73f345e2f0894a91e7f7d7a181a60cc1665ae0c70c4546f167d92fbd4ac1b2ff"
        },
        "inherit": [
          "DividendPayingTokenOptionalInterface",
          "DividendPayingTokenInterface",
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "SafeMathUint",
          "SafeMathInt"
        ],
        "methods": [
          "distributeDividends(uint256)",
          "withdrawDividend()",
          "dividendOf(address)",
          "withdrawableDividendOf(address)",
          "withdrawnDividendOf(address)",
          "accumulativeDividendOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:234"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:701"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:703"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:705"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:707"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:708"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:1064"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:238"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:278"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1091"
            },
            {
              "label": "magnitude",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1092"
            },
            {
              "label": "magnifiedDividendPerShare",
              "offset": 0,
              "slot": "153",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1093"
            },
            {
              "label": "magnifiedDividendCorrections",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_address,t_int256)",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1094"
            },
            {
              "label": "withdrawnDividends",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1095"
            },
            {
              "label": "totalDividendsDistributed",
              "offset": 0,
              "slot": "156",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1096"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_int256)": {
              "label": "mapping(address => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DividendPayingTokenInterface": {
        "src": "contracts\\CookieSaleTokenProxy.sol:1067",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dividendOf(address)",
          "withdrawDividend()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DividendPayingTokenOptionalInterface": {
        "src": "contracts\\CookieSaleTokenProxy.sol:1081",
        "inherit": [],
        "libraries": [],
        "methods": [
          "withdrawableDividendOf(address)",
          "withdrawnDividendOf(address)",
          "accumulativeDividendOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DividendTracker": {
        "src": "contracts\\CookieSaleTokenProxy.sol:1179",
        "version": {
          "withMetadata": "fb2b6743814c9497b530d58d7f1238c7c296f12f3e6b4cf26886c773d9ca6900",
          "withoutMetadata": "8cc10160585a2a1882997fd68f4f94713e98abbbd58c7d5471a32064c7a5108d",
          "linkedWithoutMetadata": "8cc10160585a2a1882997fd68f4f94713e98abbbd58c7d5471a32064c7a5108d"
        },
        "inherit": [
          "DividendPayingToken",
          "DividendPayingTokenOptionalInterface",
          "DividendPayingTokenInterface",
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "SafeMathInt",
          "IterableMappingUpgradeable"
        ],
        "methods": [
          "initialize()",
          "withdrawDividend()",
          "excludeFromDividends(address)",
          "isExcludedFromDividends(address)",
          "updateClaimWait(uint256)",
          "updateMinimumTokenBalanceForDividends(uint256)",
          "getLastProcessedIndex()",
          "getNumberOfTokenHolders()",
          "getAccount(address)",
          "getAccountAtIndex(uint256)",
          "setBalance(address payable,uint256)",
          "process(uint256)",
          "setLastProcessedIndex(uint256)",
          "processAccount(address payable,bool)"
        ],
        "linkReferences": [
          {
            "src": "contracts/CookieSaleTokenProxy.sol",
            "name": "IterableMappingUpgradeable",
            "length": 20,
            "start": 1967,
            "placeholder": "__$952d012a9ed02a1d79e081a2eb857e4bf2$__"
          },
          {
            "src": "contracts/CookieSaleTokenProxy.sol",
            "name": "IterableMappingUpgradeable",
            "length": 20,
            "start": 2305,
            "placeholder": "__$952d012a9ed02a1d79e081a2eb857e4bf2$__"
          },
          {
            "src": "contracts/CookieSaleTokenProxy.sol",
            "name": "IterableMappingUpgradeable",
            "length": 20,
            "start": 2495,
            "placeholder": "__$952d012a9ed02a1d79e081a2eb857e4bf2$__"
          },
          {
            "src": "contracts/CookieSaleTokenProxy.sol",
            "name": "IterableMappingUpgradeable",
            "length": 20,
            "start": 3628,
            "placeholder": "__$952d012a9ed02a1d79e081a2eb857e4bf2$__"
          },
          {
            "src": "contracts/CookieSaleTokenProxy.sol",
            "name": "IterableMappingUpgradeable",
            "length": 20,
            "start": 3758,
            "placeholder": "__$952d012a9ed02a1d79e081a2eb857e4bf2$__"
          },
          {
            "src": "contracts/CookieSaleTokenProxy.sol",
            "name": "IterableMappingUpgradeable",
            "length": 20,
            "start": 4352,
            "placeholder": "__$952d012a9ed02a1d79e081a2eb857e4bf2$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "IterableMappingUpgradeable",
            "src": "contracts/CookieSaleTokenProxy.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:234"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:701"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:703"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:705"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:707"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:708"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:1064"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:238"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:278"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1091"
            },
            {
              "label": "magnitude",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1092"
            },
            {
              "label": "magnifiedDividendPerShare",
              "offset": 0,
              "slot": "153",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1093"
            },
            {
              "label": "magnifiedDividendCorrections",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_address,t_int256)",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1094"
            },
            {
              "label": "withdrawnDividends",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1095"
            },
            {
              "label": "totalDividendsDistributed",
              "offset": 0,
              "slot": "156",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1096"
            },
            {
              "label": "tokenHoldersMap",
              "offset": 0,
              "slot": "157",
              "type": "t_struct(Map)1113_storage",
              "contract": "DividendTracker",
              "src": "contracts\\CookieSaleTokenProxy.sol:1183"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "161",
              "type": "t_uint256",
              "contract": "DividendTracker",
              "src": "contracts\\CookieSaleTokenProxy.sol:1184"
            },
            {
              "label": "excludedFromDividends",
              "offset": 0,
              "slot": "162",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DividendTracker",
              "src": "contracts\\CookieSaleTokenProxy.sol:1186"
            },
            {
              "label": "lastClaimTimes",
              "offset": 0,
              "slot": "163",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DividendTracker",
              "src": "contracts\\CookieSaleTokenProxy.sol:1187"
            },
            {
              "label": "claimWait",
              "offset": 0,
              "slot": "164",
              "type": "t_uint256",
              "contract": "DividendTracker",
              "src": "contracts\\CookieSaleTokenProxy.sol:1189"
            },
            {
              "label": "minimumTokenBalanceForDividends",
              "offset": 0,
              "slot": "165",
              "type": "t_uint256",
              "contract": "DividendTracker",
              "src": "contracts\\CookieSaleTokenProxy.sol:1190"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_int256)": {
              "label": "mapping(address => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1113_storage": {
              "label": "struct IterableMappingUpgradeable.Map",
              "members": [
                {
                  "label": "keys",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "indexOf",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "inserted",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:700",
        "version": {
          "withMetadata": "673a74e00d509573b393f099dec08d636e4698c7de2c675b1728cb9bd0772727",
          "withoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa",
          "linkedWithoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:234"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:701"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:703"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:705"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:707"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:708"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:1064"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:693",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Upgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:677",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts\\CookieSaleTokenProxy.sol:478",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts\\CookieSaleTokenProxy.sol:491",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts\\CookieSaleTokenProxy.sol:542",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts\\CookieSaleTokenProxy.sol:636",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:173",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IterableMappingUpgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:420",
        "version": {
          "withMetadata": "8bcc092b6e1101115bdaa7cda48440d6ab2c7dbc8dfe265ac8c870903cf94b7d",
          "withoutMetadata": "98f861d48bea9685c4692c84c3fd9c494f913cda35e169bc0ab34e34ac7d93ec",
          "linkedWithoutMetadata": "98f861d48bea9685c4692c84c3fd9c494f913cda35e169bc0ab34e34ac7d93ec"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "get(IterableMappingUpgradeable.Map storage,address)",
          "getIndexOfKey(IterableMappingUpgradeable.Map storage,address)",
          "getKeyAtIndex(IterableMappingUpgradeable.Map storage,uint256)",
          "size(IterableMappingUpgradeable.Map storage)",
          "set(IterableMappingUpgradeable.Map storage,address,uint256)",
          "remove(IterableMappingUpgradeable.Map storage,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:237",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:234"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:238"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:278"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathInt": {
        "src": "contracts\\CookieSaleTokenProxy.sol:376",
        "version": {
          "withMetadata": "4482348bc93b8d6b7aa0adc555d7eedeb8e3e178610f19f5bdd7aad9e83da901",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUint": {
        "src": "contracts\\CookieSaleTokenProxy.sol:412",
        "version": {
          "withMetadata": "c4b24833338d3f2a75a12351e4ad84132f5b2fc705c42de25cce8913c782efb0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:281",
        "version": {
          "withMetadata": "051b124224ff1b3823b9bd47725f0cb3a66ac183546a81fe338722e3acffcc47",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AddressUpgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:4",
        "version": {
          "withMetadata": "d165a41bd7257674af3ff5a22dd010e35a97af4af5ea97841267b2f275a1473a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "COOKIE": {
        "src": "contracts\\CookieSaleTokenProxy.sol:1372",
        "version": {
          "withMetadata": "01c650c2d62f5ae78385cd10e2756531d2e9c11e588cba5f1fda18a4112f0363",
          "withoutMetadata": "ccce5cd71aaf000defba8e15ab59a01d9582275c392de5529183b7d8ce99d7f6",
          "linkedWithoutMetadata": "ccce5cd71aaf000defba8e15ab59a01d9582275c392de5529183b7d8ce99d7f6"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "()",
          "claimStuckTokens(address)",
          "updateUniswapV2Router(address)",
          "excludeFromFees(address,bool)",
          "isExcludedFromFees(address)",
          "updateBuyFees(uint256,uint256,uint256,uint256,uint256)",
          "updateSellFees(uint256,uint256,uint256,uint256,uint256)",
          "enableWalletToWalletTransferWithoutFee(bool)",
          "changeMarketingWallet(address)",
          "changeDevelopmentWallet(address)",
          "changeKodiAddress(address)",
          "setSwapEnabled(bool)",
          "setSwapTokensAtAmount(uint256)",
          "setSwapWithLimit(bool)",
          "setEnableMaxWalletLimit(bool)",
          "setMaxWalletAmount(uint256)",
          "setExcludeFromMaxWallet(address,bool)",
          "isExcludedFromMaxWalletLimit(address)",
          "setEnableMaxTransactionLimit(bool)",
          "setMaxTransactionAmounts(uint256,uint256)",
          "setExcludeFromMaxTransactionLimit(address,bool)",
          "isExcludedFromMaxTransaction(address)",
          "updateDividendTracker(address)",
          "updateGasForProcessing(uint256)",
          "updateMinimumBalanceForDividends(uint256)",
          "updateClaimWait(uint256)",
          "getClaimWait()",
          "getTotalDividendsDistributed()",
          "withdrawableDividendOf(address)",
          "dividendTokenBalanceOf(address)",
          "totalRewardsEarned(address)",
          "excludeFromDividends(address)",
          "getAccountDividendsInfo(address)",
          "getAccountDividendsInfoAtIndex(uint256)",
          "processDividendTracker(uint256)",
          "claim()",
          "claimAddress(address)",
          "getLastProcessedIndex()",
          "setLastProcessedIndex(uint256)",
          "getNumberOfDividendTokenHolders()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:234"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:701"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:703"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:705"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:707"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:708"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:1064"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:238"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:278"
            },
            {
              "label": "marketingFeeOnBuy",
              "offset": 0,
              "slot": "151",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1374"
            },
            {
              "label": "marketingFeeOnSell",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1375"
            },
            {
              "label": "developmentFeeOnBuy",
              "offset": 0,
              "slot": "153",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1377"
            },
            {
              "label": "developmentFeeOnSell",
              "offset": 0,
              "slot": "154",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1378"
            },
            {
              "label": "rewardFeeOnBuy",
              "offset": 0,
              "slot": "155",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1380"
            },
            {
              "label": "rewardFeeOnSell",
              "offset": 0,
              "slot": "156",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1381"
            },
            {
              "label": "liquidityFeeOnBuy",
              "offset": 0,
              "slot": "157",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1383"
            },
            {
              "label": "liquidityFeeOnSell",
              "offset": 0,
              "slot": "158",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1384"
            },
            {
              "label": "kodiBuyBackFeeOnBuy",
              "offset": 0,
              "slot": "159",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1386"
            },
            {
              "label": "kodiBuyBackFeeOnSell",
              "offset": 0,
              "slot": "160",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1387"
            },
            {
              "label": "_totalFeesOnBuy",
              "offset": 0,
              "slot": "161",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1389"
            },
            {
              "label": "_totalFeesOnSell",
              "offset": 0,
              "slot": "162",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1390"
            },
            {
              "label": "marketingWallet",
              "offset": 0,
              "slot": "163",
              "type": "t_address",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1392"
            },
            {
              "label": "developmentWallet",
              "offset": 0,
              "slot": "164",
              "type": "t_address",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1393"
            },
            {
              "label": "kodiToken",
              "offset": 0,
              "slot": "165",
              "type": "t_address",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1394"
            },
            {
              "label": "walletToWalletTransferWithoutFee",
              "offset": 20,
              "slot": "165",
              "type": "t_bool",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1396"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "166",
              "type": "t_contract(IUniswapV2Router02)2097",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1398"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "167",
              "type": "t_address",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1399"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "168",
              "type": "t_address",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1401"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "168",
              "type": "t_bool",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1403"
            },
            {
              "label": "swapTokensAtAmount",
              "offset": 0,
              "slot": "169",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1404"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "170",
              "type": "t_bool",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1405"
            },
            {
              "label": "swapWithLimit",
              "offset": 1,
              "slot": "170",
              "type": "t_bool",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1406"
            },
            {
              "label": "_isExcludedFromFees",
              "offset": 0,
              "slot": "171",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1408"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "172",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1409"
            },
            {
              "label": "dividendTracker",
              "offset": 0,
              "slot": "173",
              "type": "t_contract(DividendTracker)3870",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1411"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "174",
              "type": "t_address",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1412"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "175",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1413"
            },
            {
              "label": "_isExcludedFromMaxWalletLimit",
              "offset": 0,
              "slot": "176",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1860"
            },
            {
              "label": "maxWalletLimitEnabled",
              "offset": 0,
              "slot": "177",
              "type": "t_bool",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1861"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "178",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1862"
            },
            {
              "label": "_isExcludedFromMaxTxLimit",
              "offset": 0,
              "slot": "179",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1896"
            },
            {
              "label": "maxTransactionLimitEnabled",
              "offset": 0,
              "slot": "180",
              "type": "t_bool",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1897"
            },
            {
              "label": "maxTransactionAmountBuy",
              "offset": 0,
              "slot": "181",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1898"
            },
            {
              "label": "maxTransactionAmountSell",
              "offset": 0,
              "slot": "182",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1899"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(DividendTracker)3870": {
              "label": "contract DividendTracker",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)2097": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ClonesUpgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:103",
        "version": {
          "withMetadata": "fe5acf0989e18d27a40a919934fee8eb54bc76c1920f19a9cef59c740533c35f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:220",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:234"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DividendPayingToken": {
        "src": "contracts\\CookieSaleTokenProxy.sol:1087",
        "version": {
          "withMetadata": "f74fecb184730106faa0e7358a34d80aa61ffb95fe2b28eff75347d71a360912",
          "withoutMetadata": "73f345e2f0894a91e7f7d7a181a60cc1665ae0c70c4546f167d92fbd4ac1b2ff",
          "linkedWithoutMetadata": "73f345e2f0894a91e7f7d7a181a60cc1665ae0c70c4546f167d92fbd4ac1b2ff"
        },
        "inherit": [
          "DividendPayingTokenOptionalInterface",
          "DividendPayingTokenInterface",
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "SafeMathUint",
          "SafeMathInt"
        ],
        "methods": [
          "distributeDividends(uint256)",
          "withdrawDividend()",
          "dividendOf(address)",
          "withdrawableDividendOf(address)",
          "withdrawnDividendOf(address)",
          "accumulativeDividendOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:234"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:701"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:703"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:705"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:707"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:708"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:1064"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:238"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:278"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1091"
            },
            {
              "label": "magnitude",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1092"
            },
            {
              "label": "magnifiedDividendPerShare",
              "offset": 0,
              "slot": "153",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1093"
            },
            {
              "label": "magnifiedDividendCorrections",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_address,t_int256)",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1094"
            },
            {
              "label": "withdrawnDividends",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1095"
            },
            {
              "label": "totalDividendsDistributed",
              "offset": 0,
              "slot": "156",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1096"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_int256)": {
              "label": "mapping(address => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DividendPayingTokenInterface": {
        "src": "contracts\\CookieSaleTokenProxy.sol:1067",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dividendOf(address)",
          "withdrawDividend()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DividendPayingTokenOptionalInterface": {
        "src": "contracts\\CookieSaleTokenProxy.sol:1081",
        "inherit": [],
        "libraries": [],
        "methods": [
          "withdrawableDividendOf(address)",
          "withdrawnDividendOf(address)",
          "accumulativeDividendOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DividendTracker": {
        "src": "contracts\\CookieSaleTokenProxy.sol:1179",
        "version": {
          "withMetadata": "643cbc86a27a1df2a18ab3810c691d5b27230cc43a92fd3759d313845539f137",
          "withoutMetadata": "76bea5d9ae2d854193a59a2187f8da97dc0d5d0da66de0fa3a404d5940326146",
          "linkedWithoutMetadata": "76bea5d9ae2d854193a59a2187f8da97dc0d5d0da66de0fa3a404d5940326146"
        },
        "inherit": [
          "DividendPayingToken",
          "DividendPayingTokenOptionalInterface",
          "DividendPayingTokenInterface",
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "SafeMathInt",
          "IterableMapping"
        ],
        "methods": [
          "initialize()",
          "withdrawDividend()",
          "excludeFromDividends(address)",
          "isExcludedFromDividends(address)",
          "updateClaimWait(uint256)",
          "updateMinimumTokenBalanceForDividends(uint256)",
          "getLastProcessedIndex()",
          "getNumberOfTokenHolders()",
          "getAccount(address)",
          "getAccountAtIndex(uint256)",
          "setBalance(address payable,uint256)",
          "process(uint256)",
          "setLastProcessedIndex(uint256)",
          "processAccount(address payable,bool)"
        ],
        "linkReferences": [
          {
            "src": "contracts/CookieSaleTokenProxy.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 1967,
            "placeholder": "__$9eba635a3079270517285bd61197c04579$__"
          },
          {
            "src": "contracts/CookieSaleTokenProxy.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 2305,
            "placeholder": "__$9eba635a3079270517285bd61197c04579$__"
          },
          {
            "src": "contracts/CookieSaleTokenProxy.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 2495,
            "placeholder": "__$9eba635a3079270517285bd61197c04579$__"
          },
          {
            "src": "contracts/CookieSaleTokenProxy.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 3628,
            "placeholder": "__$9eba635a3079270517285bd61197c04579$__"
          },
          {
            "src": "contracts/CookieSaleTokenProxy.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 3758,
            "placeholder": "__$9eba635a3079270517285bd61197c04579$__"
          },
          {
            "src": "contracts/CookieSaleTokenProxy.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 4352,
            "placeholder": "__$9eba635a3079270517285bd61197c04579$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "IterableMapping",
            "src": "contracts/CookieSaleTokenProxy.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:234"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:701"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:703"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:705"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:707"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:708"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:1064"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:238"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:278"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1091"
            },
            {
              "label": "magnitude",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1092"
            },
            {
              "label": "magnifiedDividendPerShare",
              "offset": 0,
              "slot": "153",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1093"
            },
            {
              "label": "magnifiedDividendCorrections",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_address,t_int256)",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1094"
            },
            {
              "label": "withdrawnDividends",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1095"
            },
            {
              "label": "totalDividendsDistributed",
              "offset": 0,
              "slot": "156",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1096"
            },
            {
              "label": "tokenHoldersMap",
              "offset": 0,
              "slot": "157",
              "type": "t_struct(Map)1190_storage",
              "contract": "DividendTracker",
              "src": "contracts\\CookieSaleTokenProxy.sol:1183"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "161",
              "type": "t_uint256",
              "contract": "DividendTracker",
              "src": "contracts\\CookieSaleTokenProxy.sol:1184"
            },
            {
              "label": "excludedFromDividends",
              "offset": 0,
              "slot": "162",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DividendTracker",
              "src": "contracts\\CookieSaleTokenProxy.sol:1186"
            },
            {
              "label": "lastClaimTimes",
              "offset": 0,
              "slot": "163",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DividendTracker",
              "src": "contracts\\CookieSaleTokenProxy.sol:1187"
            },
            {
              "label": "claimWait",
              "offset": 0,
              "slot": "164",
              "type": "t_uint256",
              "contract": "DividendTracker",
              "src": "contracts\\CookieSaleTokenProxy.sol:1189"
            },
            {
              "label": "minimumTokenBalanceForDividends",
              "offset": 0,
              "slot": "165",
              "type": "t_uint256",
              "contract": "DividendTracker",
              "src": "contracts\\CookieSaleTokenProxy.sol:1190"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_int256)": {
              "label": "mapping(address => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1190_storage": {
              "label": "struct IterableMapping.Map",
              "members": [
                {
                  "label": "keys",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "indexOf",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "inserted",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:700",
        "version": {
          "withMetadata": "626dea6f3b3adfe5700c2fb34456c8b9137653194aba9a2980ce27d9a5b3b643",
          "withoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa",
          "linkedWithoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:234"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:701"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:703"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:705"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:707"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:708"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:1064"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:693",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Upgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:677",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts\\CookieSaleTokenProxy.sol:478",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts\\CookieSaleTokenProxy.sol:491",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts\\CookieSaleTokenProxy.sol:542",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts\\CookieSaleTokenProxy.sol:636",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:173",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IterableMapping": {
        "src": "contracts\\CookieSaleTokenProxy.sol:420",
        "version": {
          "withMetadata": "a4cbde80e2592dcbef0a867a0bd38953544dff67ffc1759f9eb5752251cfd036",
          "withoutMetadata": "0a8f579d613d79ed4dd1528b3b56a2a7fbabf635c0ef77bcf268ee17bc198d30",
          "linkedWithoutMetadata": "0a8f579d613d79ed4dd1528b3b56a2a7fbabf635c0ef77bcf268ee17bc198d30"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "get(IterableMapping.Map storage,address)",
          "getIndexOfKey(IterableMapping.Map storage,address)",
          "getKeyAtIndex(IterableMapping.Map storage,uint256)",
          "size(IterableMapping.Map storage)",
          "set(IterableMapping.Map storage,address,uint256)",
          "remove(IterableMapping.Map storage,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:237",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:234"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:238"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:278"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathInt": {
        "src": "contracts\\CookieSaleTokenProxy.sol:376",
        "version": {
          "withMetadata": "c14f54d0467f4ba6fca49256134de89e0bed7e4bcf55271efdaa2d55a75e4b25",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUint": {
        "src": "contracts\\CookieSaleTokenProxy.sol:412",
        "version": {
          "withMetadata": "b665bc8721d54ae9f5a7dc2f1604f221113de91b4112e750d0ac8e8434446f7a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:281",
        "version": {
          "withMetadata": "66a3dced3f059ae53ad6cfd07402854ca53eb8df77faef7b8985af700e9ad92c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AddressUpgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:4",
        "version": {
          "withMetadata": "fb3db43f7f1096946e76f447810b8e91b9cf4f80792764a500ecb66c11eaa70d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "COOKIE": {
        "src": "contracts\\CookieSaleTokenProxy.sol:1372",
        "version": {
          "withMetadata": "8f790afa63a124d13326e295aaf1dea339545455bf056fad6d1863930ad6f618",
          "withoutMetadata": "593743194eac1df456e5a74420ae756efd92118b72842a2541e126ad2b350e02",
          "linkedWithoutMetadata": "593743194eac1df456e5a74420ae756efd92118b72842a2541e126ad2b350e02"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "()",
          "claimStuckTokens(address)",
          "updateUniswapV2Router(address)",
          "excludeFromFees(address,bool)",
          "isExcludedFromFees(address)",
          "updateBuyFees(uint256,uint256,uint256,uint256,uint256)",
          "updateSellFees(uint256,uint256,uint256,uint256,uint256)",
          "enableWalletToWalletTransferWithoutFee(bool)",
          "changeMarketingWallet(address)",
          "changeDevelopmentWallet(address)",
          "changeKodiAddress(address)",
          "setSwapEnabled(bool)",
          "setSwapTokensAtAmount(uint256)",
          "setSwapWithLimit(bool)",
          "setEnableMaxWalletLimit(bool)",
          "setMaxWalletAmount(uint256)",
          "setExcludeFromMaxWallet(address,bool)",
          "isExcludedFromMaxWalletLimit(address)",
          "setEnableMaxTransactionLimit(bool)",
          "setMaxTransactionAmounts(uint256,uint256)",
          "setExcludeFromMaxTransactionLimit(address,bool)",
          "isExcludedFromMaxTransaction(address)",
          "updateDividendTracker(address)",
          "updateGasForProcessing(uint256)",
          "updateMinimumBalanceForDividends(uint256)",
          "updateClaimWait(uint256)",
          "getClaimWait()",
          "getTotalDividendsDistributed()",
          "withdrawableDividendOf(address)",
          "dividendTokenBalanceOf(address)",
          "totalRewardsEarned(address)",
          "excludeFromDividends(address)",
          "getAccountDividendsInfo(address)",
          "getAccountDividendsInfoAtIndex(uint256)",
          "processDividendTracker(uint256)",
          "claim()",
          "claimAddress(address)",
          "getLastProcessedIndex()",
          "setLastProcessedIndex(uint256)",
          "getNumberOfDividendTokenHolders()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:234"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:701"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:703"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:705"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:707"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:708"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:1064"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:238"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:278"
            },
            {
              "label": "marketingFeeOnBuy",
              "offset": 0,
              "slot": "151",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1374"
            },
            {
              "label": "marketingFeeOnSell",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1375"
            },
            {
              "label": "developmentFeeOnBuy",
              "offset": 0,
              "slot": "153",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1377"
            },
            {
              "label": "developmentFeeOnSell",
              "offset": 0,
              "slot": "154",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1378"
            },
            {
              "label": "rewardFeeOnBuy",
              "offset": 0,
              "slot": "155",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1380"
            },
            {
              "label": "rewardFeeOnSell",
              "offset": 0,
              "slot": "156",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1381"
            },
            {
              "label": "liquidityFeeOnBuy",
              "offset": 0,
              "slot": "157",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1383"
            },
            {
              "label": "liquidityFeeOnSell",
              "offset": 0,
              "slot": "158",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1384"
            },
            {
              "label": "kodiBuyBackFeeOnBuy",
              "offset": 0,
              "slot": "159",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1386"
            },
            {
              "label": "kodiBuyBackFeeOnSell",
              "offset": 0,
              "slot": "160",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1387"
            },
            {
              "label": "_totalFeesOnBuy",
              "offset": 0,
              "slot": "161",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1389"
            },
            {
              "label": "_totalFeesOnSell",
              "offset": 0,
              "slot": "162",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1390"
            },
            {
              "label": "marketingWallet",
              "offset": 0,
              "slot": "163",
              "type": "t_address",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1392"
            },
            {
              "label": "developmentWallet",
              "offset": 0,
              "slot": "164",
              "type": "t_address",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1393"
            },
            {
              "label": "kodiToken",
              "offset": 0,
              "slot": "165",
              "type": "t_address",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1394"
            },
            {
              "label": "walletToWalletTransferWithoutFee",
              "offset": 20,
              "slot": "165",
              "type": "t_bool",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1396"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "166",
              "type": "t_contract(IUniswapV2Router02)2097",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1398"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "167",
              "type": "t_address",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1399"
            },
            {
              "label": "DEAD",
              "offset": 0,
              "slot": "168",
              "type": "t_address",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1401"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "168",
              "type": "t_bool",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1403"
            },
            {
              "label": "swapTokensAtAmount",
              "offset": 0,
              "slot": "169",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1404"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "170",
              "type": "t_bool",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1405"
            },
            {
              "label": "swapWithLimit",
              "offset": 1,
              "slot": "170",
              "type": "t_bool",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1406"
            },
            {
              "label": "_isExcludedFromFees",
              "offset": 0,
              "slot": "171",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1408"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "172",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1409"
            },
            {
              "label": "dividendTracker",
              "offset": 0,
              "slot": "173",
              "type": "t_contract(DividendTracker)3870",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1411"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "174",
              "type": "t_address",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1412"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "175",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1413"
            },
            {
              "label": "_isExcludedFromMaxWalletLimit",
              "offset": 0,
              "slot": "176",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1860"
            },
            {
              "label": "maxWalletLimitEnabled",
              "offset": 0,
              "slot": "177",
              "type": "t_bool",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1861"
            },
            {
              "label": "maxWalletAmount",
              "offset": 0,
              "slot": "178",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1862"
            },
            {
              "label": "_isExcludedFromMaxTxLimit",
              "offset": 0,
              "slot": "179",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1896"
            },
            {
              "label": "maxTransactionLimitEnabled",
              "offset": 0,
              "slot": "180",
              "type": "t_bool",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1897"
            },
            {
              "label": "maxTransactionAmountBuy",
              "offset": 0,
              "slot": "181",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1898"
            },
            {
              "label": "maxTransactionAmountSell",
              "offset": 0,
              "slot": "182",
              "type": "t_uint256",
              "contract": "COOKIE",
              "src": "contracts\\CookieSaleTokenProxy.sol:1899"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(DividendTracker)3870": {
              "label": "contract DividendTracker",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)2097": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ClonesUpgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:103",
        "version": {
          "withMetadata": "788871bc724a2c0ce17e0ee470c77da06e606c7ad19237093a4e1e97cc9a0691",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:220",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:234"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DividendPayingToken": {
        "src": "contracts\\CookieSaleTokenProxy.sol:1087",
        "version": {
          "withMetadata": "092df5e13d883dd6fd9f351e519086dcb50f146da074f2e2299cf698f45eeafc",
          "withoutMetadata": "73f345e2f0894a91e7f7d7a181a60cc1665ae0c70c4546f167d92fbd4ac1b2ff",
          "linkedWithoutMetadata": "73f345e2f0894a91e7f7d7a181a60cc1665ae0c70c4546f167d92fbd4ac1b2ff"
        },
        "inherit": [
          "DividendPayingTokenOptionalInterface",
          "DividendPayingTokenInterface",
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "SafeMathUint",
          "SafeMathInt"
        ],
        "methods": [
          "distributeDividends(uint256)",
          "withdrawDividend()",
          "dividendOf(address)",
          "withdrawableDividendOf(address)",
          "withdrawnDividendOf(address)",
          "accumulativeDividendOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:234"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:701"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:703"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:705"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:707"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:708"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:1064"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:238"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:278"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1091"
            },
            {
              "label": "magnitude",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1092"
            },
            {
              "label": "magnifiedDividendPerShare",
              "offset": 0,
              "slot": "153",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1093"
            },
            {
              "label": "magnifiedDividendCorrections",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_address,t_int256)",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1094"
            },
            {
              "label": "withdrawnDividends",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1095"
            },
            {
              "label": "totalDividendsDistributed",
              "offset": 0,
              "slot": "156",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1096"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_int256)": {
              "label": "mapping(address => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DividendPayingTokenInterface": {
        "src": "contracts\\CookieSaleTokenProxy.sol:1067",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dividendOf(address)",
          "withdrawDividend()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DividendPayingTokenOptionalInterface": {
        "src": "contracts\\CookieSaleTokenProxy.sol:1081",
        "inherit": [],
        "libraries": [],
        "methods": [
          "withdrawableDividendOf(address)",
          "withdrawnDividendOf(address)",
          "accumulativeDividendOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DividendTracker": {
        "src": "contracts\\CookieSaleTokenProxy.sol:1179",
        "version": {
          "withMetadata": "3e5491a20836f30c7e34052cc93c3f95585a6b1bbaa15e2de194b5fcd6b01fbc",
          "withoutMetadata": "6ad4943496332c9205419ec87b62f32a228ea391772663973a41de6ad0dca711",
          "linkedWithoutMetadata": "6ad4943496332c9205419ec87b62f32a228ea391772663973a41de6ad0dca711"
        },
        "inherit": [
          "DividendPayingToken",
          "DividendPayingTokenOptionalInterface",
          "DividendPayingTokenInterface",
          "OwnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "SafeMathInt",
          "IterableMapping"
        ],
        "methods": [
          "initialize()",
          "withdrawDividend()",
          "excludeFromDividends(address)",
          "isExcludedFromDividends(address)",
          "updateClaimWait(uint256)",
          "updateMinimumTokenBalanceForDividends(uint256)",
          "getLastProcessedIndex()",
          "getNumberOfTokenHolders()",
          "getAccount(address)",
          "getAccountAtIndex(uint256)",
          "setBalance(address payable,uint256)",
          "process(uint256)",
          "setLastProcessedIndex(uint256)",
          "processAccount(address payable,bool)"
        ],
        "linkReferences": [
          {
            "src": "contracts/CookieSaleTokenProxy.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 1967,
            "placeholder": "__$9eba635a3079270517285bd61197c04579$__"
          },
          {
            "src": "contracts/CookieSaleTokenProxy.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 2305,
            "placeholder": "__$9eba635a3079270517285bd61197c04579$__"
          },
          {
            "src": "contracts/CookieSaleTokenProxy.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 2495,
            "placeholder": "__$9eba635a3079270517285bd61197c04579$__"
          },
          {
            "src": "contracts/CookieSaleTokenProxy.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 3609,
            "placeholder": "__$9eba635a3079270517285bd61197c04579$__"
          },
          {
            "src": "contracts/CookieSaleTokenProxy.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 3739,
            "placeholder": "__$9eba635a3079270517285bd61197c04579$__"
          },
          {
            "src": "contracts/CookieSaleTokenProxy.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 4333,
            "placeholder": "__$9eba635a3079270517285bd61197c04579$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "IterableMapping",
            "src": "contracts/CookieSaleTokenProxy.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:234"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:701"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:703"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:705"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:707"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:708"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:1064"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:238"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:278"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1091"
            },
            {
              "label": "magnitude",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1092"
            },
            {
              "label": "magnifiedDividendPerShare",
              "offset": 0,
              "slot": "153",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1093"
            },
            {
              "label": "magnifiedDividendCorrections",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_address,t_int256)",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1094"
            },
            {
              "label": "withdrawnDividends",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1095"
            },
            {
              "label": "totalDividendsDistributed",
              "offset": 0,
              "slot": "156",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts\\CookieSaleTokenProxy.sol:1096"
            },
            {
              "label": "tokenHoldersMap",
              "offset": 0,
              "slot": "157",
              "type": "t_struct(Map)1190_storage",
              "contract": "DividendTracker",
              "src": "contracts\\CookieSaleTokenProxy.sol:1183"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "161",
              "type": "t_uint256",
              "contract": "DividendTracker",
              "src": "contracts\\CookieSaleTokenProxy.sol:1184"
            },
            {
              "label": "excludedFromDividends",
              "offset": 0,
              "slot": "162",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DividendTracker",
              "src": "contracts\\CookieSaleTokenProxy.sol:1186"
            },
            {
              "label": "lastClaimTimes",
              "offset": 0,
              "slot": "163",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DividendTracker",
              "src": "contracts\\CookieSaleTokenProxy.sol:1187"
            },
            {
              "label": "claimWait",
              "offset": 0,
              "slot": "164",
              "type": "t_uint256",
              "contract": "DividendTracker",
              "src": "contracts\\CookieSaleTokenProxy.sol:1189"
            },
            {
              "label": "minimumTokenBalanceForDividends",
              "offset": 0,
              "slot": "165",
              "type": "t_uint256",
              "contract": "DividendTracker",
              "src": "contracts\\CookieSaleTokenProxy.sol:1190"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_int256)": {
              "label": "mapping(address => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1190_storage": {
              "label": "struct IterableMapping.Map",
              "members": [
                {
                  "label": "keys",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "indexOf",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "inserted",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:700",
        "version": {
          "withMetadata": "406656fa6c402e571d2241fa7abe1bae3d17eab2a2889ea60ee83ce1f91c25fc",
          "withoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa",
          "linkedWithoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:234"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:701"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:703"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:705"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:707"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:708"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:1064"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:693",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Upgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:677",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts\\CookieSaleTokenProxy.sol:478",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts\\CookieSaleTokenProxy.sol:491",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts\\CookieSaleTokenProxy.sol:542",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts\\CookieSaleTokenProxy.sol:636",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:173",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IterableMapping": {
        "src": "contracts\\CookieSaleTokenProxy.sol:420",
        "version": {
          "withMetadata": "47a1f12cb5a0ca0c0223e9bbe11000a86aa00ab4ac958bdcebf8cbe0a6e68be9",
          "withoutMetadata": "0a8f579d613d79ed4dd1528b3b56a2a7fbabf635c0ef77bcf268ee17bc198d30",
          "linkedWithoutMetadata": "0a8f579d613d79ed4dd1528b3b56a2a7fbabf635c0ef77bcf268ee17bc198d30"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "get(IterableMapping.Map storage,address)",
          "getIndexOfKey(IterableMapping.Map storage,address)",
          "getKeyAtIndex(IterableMapping.Map storage,uint256)",
          "size(IterableMapping.Map storage)",
          "set(IterableMapping.Map storage,address,uint256)",
          "remove(IterableMapping.Map storage,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:237",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:175"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts\\CookieSaleTokenProxy.sol:176"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:234"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:238"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "contracts\\CookieSaleTokenProxy.sol:278"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMathInt": {
        "src": "contracts\\CookieSaleTokenProxy.sol:376",
        "version": {
          "withMetadata": "2dc500db24de6e4abfb479885a4c422675da9ab9f904015cc49a035dbde36c51",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUint": {
        "src": "contracts\\CookieSaleTokenProxy.sol:412",
        "version": {
          "withMetadata": "53fcd6594cf8decefee252f17d5da0bf7445f356461fabd65214316e346caac1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "contracts\\CookieSaleTokenProxy.sol:281",
        "version": {
          "withMetadata": "9ec1dca13ee27271b97fbe49bda222282cda8cd3ed014a80e2d611e8d9beac94",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}